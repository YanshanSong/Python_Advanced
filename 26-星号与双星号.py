# 1. 函数的可变参数
# 当函数的参数前面有一个*的时候表示这是一个可变的位置参数
# 两个**表示是可变的关键字参数
def foo(*args, **kwarg):
	for item in args:
		print(item)
	for k,v in kwarg.items():
		print(k, v)
	print(30*'=')

foo(1, 2, 3, a=4, b=5)
foo(2, 3, a=4, b=5, c=1)
'''
1
2
3
a 4
b 5
==============================
2
3
b 5
a 4
c 1
==============================
'''
# 2.unpack参数 
# *把序列/集合解包(unpack)成位置参数，**把字典解包成关键字参数
v1 = (1, 2, 4)
v2 = [11, 15, 23]
d = {'a':1, 'b':12}
foo(v1, d)  # 此时v1, d作为位置参数传递给函数
'''
(1, 2, 4)
{'a': 1, 'b': 12}
==============================
'''
foo(*v1, **d) # 将序列/字典解包后传递给函数
# 等价于foo(1, 2, 4, a=1, b=12)
'''
1
2
4
b 12
a 1
==============================
'''
# 注意:
# 可变位置参数*args是一个元组，是不可修改的
# 对于字典类型，如果只使用一个星号*，那么传入的只是字典的键
